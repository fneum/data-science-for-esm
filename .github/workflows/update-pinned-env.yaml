name: Update locked envs
on:
  push:
    paths:
    - environment.yaml
    - requirements.txt
  workflow_dispatch:

env:
  BASE_ENV: envs/environment.yaml

jobs:
  update-conda-locked-environment:
    if: ${{ github.ref == 'refs/heads/main' }}
    name: Update pinned envs for conda
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - uses: actions/checkout@v5

    - name: Setup conda
      uses: conda-incubator/setup-miniconda@v3
      with:
        miniforge-version: latest
        activate-environment: ${{ github.event.repository.name }}
        channel-priority: strict
        environment-file: ${{ env.BASE_ENV }}

    - name: Install conda-lock
      run: |
        conda install -c conda-forge conda-lock

    - name: Generate lockfiles for all platforms
      run: |
        conda-lock -f ${{ env.BASE_ENV }} \
        -p linux-64 -p osx-64 -p win-64 -p osx-arm64 \
        -k env --filename-template "envs/{platform}.lock"

        # Rename to .yaml extension
        for file in envs/*.lock.yml; do
          mv "$file" "${file%.yml}.yaml"
        done

    - name: Insert environment name in lock files
      run: |
        for file in envs/*.lock.yaml; do
          if [ -f "$file" ]; then
            echo "Processing $file"
            if ! grep -q "name: esm-ws-25-26" "$file"; then
              # Insert name: esm-ws-25-26 before channels section
              sed -i '7a name: esm-ws-25-26' "$file"
            else
              echo "name: esm-ws-25-26 already exists in $file"
            fi
          fi
        done

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: lockfiles-conda
        path: envs/*.lock.yaml

  update-pip-uv-locked-environment:
    if: ${{ github.ref == 'refs/heads/main' }}
    name: Update pinned envs for pip/uv
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - uses: actions/checkout@v5

    - name: Install uv
      uses: astral-sh/setup-uv@v6

    - name: Generate lockfiles for pip and uv
      run: |
        # Create requirements.lock
        uv pip compile requirements.txt -o requirements.lock --upgrade

        # Create uv.lock
        uv init --no-readme --no-workspace --no-package . --python 3.13
        uv add -r requirements.txt
        rm .python-version main.py pyproject.toml

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: lockfiles-uv
        path: requirements.lock,uv.lock

  create-pull-request:
    needs:
    - update-conda-locked-environment
    - update-pip-uv-locked-environment
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5

    - name: Download conda artifacts
      uses: actions/download-artifact@v5
      with:
        name: lockfiles-conda
        path: envs/
    - name: Download uv artifacts
      uses: actions/download-artifact@v5
      with:
        name: lockfiles-uv

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v7
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        branch: update-locked-environment
        title: "[github-actions.ci] Update locked envs"
        body: |
          Automatically generated PR to update locked environment files for Windows, macOS, and Linux.

          These files were generated using conda-lock for improved dependency resolution and reproducibility.

          **Note: Do not merge without manual test execution. Either update the branch to trigger tests, or use `workflow_dispatch` to run tests manually. Unlike standard PRs, tests will not run automatically.**
        commit-message: "Update locked environment files for all platforms"
